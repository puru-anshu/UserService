openapi: 3.0.3
info:
  title: Mutual Fund Tracker - Authentication Service
  version: 1.0.0
  description: Authentication and user management API for Mutual Fund Tracking Application

servers:
  - url: https://api.mutualfundtracker.com/v1/auth
    description: Production API Server

components:
  schemas:
    # Common Error Response
    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: Unique error identifier
        message:
          type: string
          description: Detailed error description
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the error

    # User Authentication Schemas
    UserCredentials:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password (min 8 characters)

    GoogleAuthRequest:
      type: object
      required:
        - google_token
      properties:
        google_token:
          type: string
          description: Google OAuth2 ID token
        referral_code:
          type: string
          description: Optional referral code during registration

    UserProfile:
      type: object
      properties:
        user_id:
          type: string
          description: Unique user identifier
        email:
          type: string
          format: email
        full_name:
          type: string
        profile_picture_url:
          type: string
        registration_date:
          type: string
          format: date-time
        last_login:
          type: string
          format: date-time

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: JWT access token
        refresh_token:
          type: string
          description: Token used to obtain new access tokens
        token_type:
          type: string
          enum:
            - Bearer
        expires_in:
          type: integer
          description: Token expiration time in seconds
        user_profile:
          $ref: '#/components/schemas/UserProfile'

    PasswordResetRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: User's registered email address

    PasswordResetConfirmRequest:
      type: object
      required:
        - reset_token
        - new_password
      properties:
        reset_token:
          type: string
          description: One-time password reset token
        new_password:
          type: string
          format: password
          description: New password (min 8 characters)

paths:
  /signup:
    post:
      summary: User Registration
      description: Register a new user with email and password or via Google OAuth
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/GoogleAuthRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid registration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /signin:
    post:
      summary: User Login
      description: Authenticate user with email/password or Google OAuth
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UserCredentials'
                - $ref: '#/components/schemas/GoogleAuthRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /signout:
    post:
      summary: User Logout
      description: Invalidate current session and tokens
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully logged out
        '401':
          description: Unauthorized - Invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /refresh-token:
    post:
      summary: Refresh Access Token
      description: Obtain a new access token using a valid refresh token
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /password-reset/request:
    post:
      summary: Initiate Password Reset
      description: Send password reset link to user's email
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: Password reset link sent
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /password-reset/confirm:
    post:
      summary: Confirm Password Reset
      description: Set new password using reset token
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
      responses:
        '200':
          description: Password successfully reset
        '400':
          description: Invalid or expired reset token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

security:
  - BearerAuth: []

securitySchemes:
  BearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT